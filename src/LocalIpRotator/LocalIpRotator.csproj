<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <AssemblyName>LocalIpRotator</AssemblyName>
    <RootNamespace>LocalIpRotator</RootNamespace>
    <OutputType>Library</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <PropertyGroup>
    <Description>This lib allows you to make local ip rotations when doing a request in .NET, supports IPV4 or IPV6 blocks</Description>
    <PackageTags>ipv4, ipv6, block, blocks, ipv6block, ipv4block, ip, http, rotator, bind, binder, socket, rotation, route, planner, routeplanner, csharp, dotnet, vb-net, fsharp</PackageTags>
    <PackageReadmeFile>README.md</PackageReadmeFile>
  </PropertyGroup>

  <PropertyGroup>
    <Version>1.0.0</Version>
    <Optimize>True</Optimize>
    <GenerateDocumentationFile>True</GenerateDocumentationFile>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DebugType>Portable</DebugType>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
  </PropertyGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>False</GeneratePackageOnBuild>
    <Authors>renanrcp</Authors>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageProjectUrl>https://github.com/renanrcp/LocalIpRotator</PackageProjectUrl>
    <RepositoryUrl>https://github.com/renanrcp/LocalIpRotator</RepositoryUrl>
    <RepositoryType>Git</RepositoryType>
  </PropertyGroup>

  <ItemGroup>
    <SupportedPlatform Remove="browser" />
  </ItemGroup>

  <ItemGroup>
    <InternalsVisibleTo Include="LocalIpRotator.Tests" />
  </ItemGroup>

  <ItemGroup>
    <None Include="../../README.md" Pack="true" PackagePath="/" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.2" />
  </ItemGroup>

  <Target Name="Husky" BeforeTargets="Restore;CollectPackageReferences" Condition="'$(HUSKY)' != 0 And !Exists('../../.husky/_')">
    <Exec Command="dotnet tool restore" StandardOutputImportance="Low" StandardErrorImportance="High" />
    <Exec Command="dotnet husky install" StandardOutputImportance="Low" StandardErrorImportance="High" WorkingDirectory="../.." />
  </Target>

</Project>
